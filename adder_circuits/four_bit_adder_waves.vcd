$date
	Sun Jan 15 16:24:45 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module full_adder_top $end
$scope module four_bit_adder $end
$var wire 4 ! a [3:0] $end
$var wire 4 " b [3:0] $end
$var wire 1 # cin $end
$var wire 1 $ cout $end
$var wire 1 % overfl $end
$var wire 4 & y [3:0] $end
$var wire 1 ' s9 $end
$var wire 1 ( s8 $end
$var wire 1 ) s7 $end
$var wire 1 * s6 $end
$var wire 1 + s5 $end
$var wire 1 , s4 $end
$var wire 1 - s3 $end
$var wire 1 . s2 $end
$var wire 1 / s14 $end
$var wire 1 0 s13 $end
$var wire 1 1 s12 $end
$var wire 1 2 s11 $end
$var wire 1 3 s10 $end
$var wire 1 4 s1 $end
$var wire 1 5 s0 $end
$var wire 1 6 cout_temp $end
$scope module full_adder_i0 $end
$var wire 1 1 a $end
$var wire 1 0 b $end
$var wire 1 # cin $end
$var wire 1 3 cout $end
$var wire 1 / sum $end
$upscope $end
$scope module full_adder_i1 $end
$var wire 1 ( a $end
$var wire 1 ' b $end
$var wire 1 3 cin $end
$var wire 1 * cout $end
$var wire 1 2 sum $end
$upscope $end
$scope module full_adder_i2 $end
$var wire 1 , a $end
$var wire 1 + b $end
$var wire 1 * cin $end
$var wire 1 . cout $end
$var wire 1 ) sum $end
$upscope $end
$scope module full_adder_i3 $end
$var wire 1 5 a $end
$var wire 1 4 b $end
$var wire 1 . cin $end
$var wire 1 6 cout $end
$var wire 1 - sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
0(
0'
b0 &
0%
0$
0#
b0 "
b0 !
$end
#10
b10 &
12
13
11
10
b1 !
b1 "
#20
02
03
b1 &
1/
01
00
1#
b0 !
b0 "
#30
1)
1*
b100 &
0/
1(
1'
0#
b10 !
b10 "
#40
b110 &
12
13
11
10
b11 !
b11 "
#50
b1110 &
1-
1$
16
1.
15
1,
14
1+
b1111 !
b1111 "
#60
b1111 &
1/
1#
#70
1%
0$
06
b1110 &
0/
05
04
0#
b111 !
b111 "
#80
0-
0)
0.
0*
b0 &
02
1$
16
03
15
0,
0(
01
14
0+
0'
00
b1000 !
b1000 "
#90
0%
1)
0$
06
b110 &
12
05
1,
04
1'
b100 !
b10 "
#100
1-
1%
0)
1.
b1000 &
02
1+
0'
b100 "
#110
0$
06
0%
1)
0.
12
b1111 &
1/
15
0+
1'
10
b1100 !
b11 "
#120
0)
b1001 &
02
0,
0'
b1000 !
b1 "
#130
1$
16
0-
0%
1.
1*
13
0)
02
b0 &
0/
05
1,
11
14
1'
00
1#
b101 !
b1010 "
#140
0*
1%
12
0$
06
03
1-
0)
b1011 &
1/
1(
04
1+
0'
0#
b111 !
b100 "
#150
0%
1*
02
1$
16
13
0)
1.
0-
b0 &
0/
0,
14
1#
b11 !
b1100 "
#160
