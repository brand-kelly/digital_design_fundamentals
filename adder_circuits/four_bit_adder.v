/*
 * Generated by Digital. Don't modify this file!
 * Any changes will be lost if this file is regenerated.
 */

module full_adder (
  input a,
  input b,
  input cin,
  output sum,
  output cout
);
  assign sum = (a ^ b ^ cin);
  assign cout = ((a & b) | (a & cin) | (b & cin));
endmodule

module four_bit_adder (
  input [3:0] a,
  input [3:0] b,
  input cin,
  output cout,
  output overfl,
  output [3:0] y
);
  wire a3;
  wire b3;
  wire s0;
  wire sum3;
  wire cout_temp;
  wire a2;
  wire b2;
  wire s1;
  wire sum2;
  wire a1;
  wire b1;
  wire s2;
  wire sum1;
  wire a0;
  wire b0;
  wire sum0;
  assign a3 = a[3];
  assign a2 = a[2];
  assign a1 = a[1];
  assign a0 = a[0];
  assign b3 = b[3];
  assign b2 = b[2];
  assign b1 = b[1];
  assign b0 = b[0];
  full_adder full_adder_i0 (
    .a( a0 ),
    .b( b0 ),
    .cin( cin ),
    .sum( sum0 ),
    .cout( s2 )
  );
  full_adder full_adder_i1 (
    .a( a1 ),
    .b( b1 ),
    .cin( s2 ),
    .sum( sum1 ),
    .cout( s1 )
  );
  full_adder full_adder_i2 (
    .a( a2 ),
    .b( b2 ),
    .cin( s1 ),
    .sum( sum2 ),
    .cout( s0 )
  );
  full_adder full_adder_i3 (
    .a( a3 ),
    .b( b3 ),
    .cin( s0 ),
    .sum( sum3 ),
    .cout( cout_temp )
  );
  assign y[3] = sum3;
  assign y[2] = sum2;
  assign y[1] = sum1;
  assign y[0] = sum0;
  assign overfl = (cout_temp ^ s0);
  assign cout = cout_temp;
endmodule
